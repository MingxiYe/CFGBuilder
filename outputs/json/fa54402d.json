{
    "address": "",
    "binaryHash": "fa54402d",
    "binarySource": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3610356806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063a6f9dae114610059575b600080fd5b610043610075565b604051610050919061025d565b60405180910390f35b610073600480360381019061006e91906101fe565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610278565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506101f881610309565b92915050565b600060208284031215610214576102136102db565b5b6000610222848285016101e9565b91505092915050565b610234816102a9565b82525050565b6000610247601383610298565b9150610252826102e0565b602082019050919050565b6000602082019050610272600083018461022b565b92915050565b600060208201905081810360008301526102918161023a565b9050919050565b600082825260208201905092915050565b60006102b4826102bb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b610312816102a9565b811461031d57600080fd5b5056fea2646970667358221220db8b7c376acedd6d9f0cde96114ef9145e7a9a1ab942d5a8285572a52c97636364736f6c63430008060033",
    "constructorCfg": {
        "buildReport": "Direct jump target errors: 0\nOrphan jump target null errors: 0\nOrphan jump target unknown errors: 0\nMultiple root nodes errors: 0\nSymbolic execution stack limit exceeded errors: 0\nBlock limit errors: 0\nCritical errors: 0",
        "bytecode": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3610356806100db6000396000f3fe",
        "nodes": [
            {
                "bytecodeHex": "608060405234801561001057",
                "length": 12,
                "offset": 0,
                "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI\n",
                "stackBalance": 1509967425,
                "type": 1
            },
            {
                "bytecodeHex": "600080fd",
                "length": 4,
                "offset": 12,
                "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT\n",
                "stackBalance": 1509969456,
                "type": 1
            },
            {
                "bytecodeHex": "5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3610356806100db6000396000f3",
                "length": 202,
                "offset": 16,
                "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: CALLER\n19: PUSH1 0x00\n21: DUP1\n22: PUSH2 0x0100\n25: EXP\n26: DUP2\n27: SLOAD\n28: DUP2\n29: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n50: MUL\n51: NOT\n52: AND\n53: SWAP1\n54: DUP4\n55: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n76: AND\n77: MUL\n78: OR\n79: SWAP1\n80: SSTORE\n81: POP\n82: PUSH1 0x00\n84: DUP1\n85: SLOAD\n86: SWAP1\n87: PUSH2 0x0100\n90: EXP\n91: SWAP1\n92: DIV\n93: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n114: AND\n115: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n136: AND\n137: PUSH1 0x00\n139: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n160: AND\n161: PUSH32 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735\n194: PUSH1 0x40\n196: MLOAD\n197: PUSH1 0x40\n199: MLOAD\n200: DUP1\n201: SWAP2\n202: SUB\n203: SWAP1\n204: LOG3\n205: PUSH2 0x0356\n208: DUP1\n209: PUSH2 0x00db\n212: PUSH1 0x00\n214: CODECOPY\n215: PUSH1 0x00\n217: RETURN\n",
                "stackBalance": 1509970399,
                "type": 2
            },
            {
                "bytecodeHex": "",
                "length": 0,
                "offset": 218,
                "parsedOpcodes": "lock limit errors: ",
                "stackBalance": 805318968,
                "type": 3
            }
        ],
        "remainingData": "fe",
        "successors": [
            {
                "from": 0,
                "to": [
                    12,
                    16
                ]
            },
            {
                "from": 12,
                "to": [
                    218
                ]
            },
            {
                "from": 16,
                "to": [
                    218
                ]
            },
            {
                "from": 218,
                "to": []
            }
        ]
    },
    "constructorRemainingData": "",
    "isOnlyRuntime": false,
    "metadata": "a2646970667358221220db8b7c376acedd6d9f0cde96114ef9145e7a9a1ab942d5a8285572a52c97636364736f6c63430008060033",
    "name": "Sample",
    "runtimeCfg": {
        "buildReport": "Direct jump target errors: 0\nOrphan jump target null errors: 0\nOrphan jump target unknown errors: 0\nMultiple root nodes errors: 1\nSymbolic execution stack limit exceeded errors: 0\nBlock limit errors: 0\nCritical errors: 0",
        "bytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063a6f9dae114610059575b600080fd5b610043610075565b604051610050919061025d565b60405180910390f35b610073600480360381019061006e91906101fe565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610278565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506101f881610309565b92915050565b600060208284031215610214576102136102db565b5b6000610222848285016101e9565b91505092915050565b610234816102a9565b82525050565b6000610247601383610298565b9150610252826102e0565b602082019050919050565b6000602082019050610272600083018461022b565b92915050565b600060208201905081810360008301526102918161023a565b9050919050565b600082825260208201905092915050565b60006102b4826102bb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b610312816102a9565b811461031d57600080fd5b5056fe",
        "nodes": [
            {
                "bytecodeHex": "608060405234801561001057",
                "length": 12,
                "offset": 0,
                "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI\n",
                "stackBalance": 1,
                "type": 1
            },
            {
                "bytecodeHex": "600080fd",
                "length": 4,
                "offset": 12,
                "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT\n",
                "stackBalance": 0,
                "type": 1
            },
            {
                "bytecodeHex": "5b506004361061003657",
                "length": 10,
                "offset": 16,
                "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x0036\n25: JUMPI\n",
                "stackBalance": -1,
                "type": 2
            },
            {
                "bytecodeHex": "60003560e01c8063893d20e81461003b57",
                "length": 17,
                "offset": 26,
                "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0x893d20e8\n38: EQ\n39: PUSH2 0x003b\n42: JUMPI\n",
                "stackBalance": 1,
                "type": 1
            },
            {
                "bytecodeHex": "8063a6f9dae11461005957",
                "length": 11,
                "offset": 43,
                "parsedOpcodes": "43: DUP1\n44: PUSH4 0xa6f9dae1\n49: EQ\n50: PUSH2 0x0059\n53: JUMPI\n",
                "stackBalance": 0,
                "type": 1
            },
            {
                "bytecodeHex": "5b600080fd",
                "length": 5,
                "offset": 54,
                "parsedOpcodes": "54: JUMPDEST\n55: PUSH1 0x00\n57: DUP1\n58: REVERT\n",
                "stackBalance": 0,
                "type": 1
            },
            {
                "bytecodeHex": "5b61004361007556",
                "length": 8,
                "offset": 59,
                "parsedOpcodes": "59: JUMPDEST\n60: PUSH2 0x0043\n63: PUSH2 0x0075\n66: JUMP\n",
                "stackBalance": 1,
                "type": 1
            },
            {
                "bytecodeHex": "5b604051610050919061025d56",
                "length": 13,
                "offset": 67,
                "parsedOpcodes": "67: JUMPDEST\n68: PUSH1 0x40\n70: MLOAD\n71: PUSH2 0x0050\n74: SWAP2\n75: SWAP1\n76: PUSH2 0x025d\n79: JUMP\n",
                "stackBalance": 2,
                "type": 1
            },
            {
                "bytecodeHex": "5b60405180910390f3",
                "length": 9,
                "offset": 80,
                "parsedOpcodes": "80: JUMPDEST\n81: PUSH1 0x40\n83: MLOAD\n84: DUP1\n85: SWAP2\n86: SUB\n87: SWAP1\n88: RETURN\n",
                "stackBalance": -1,
                "type": 1
            },
            {
                "bytecodeHex": "5b610073600480360381019061006e91906101fe56",
                "length": 21,
                "offset": 89,
                "parsedOpcodes": "89: JUMPDEST\n90: PUSH2 0x0073\n93: PUSH1 0x04\n95: DUP1\n96: CALLDATASIZE\n97: SUB\n98: DUP2\n99: ADD\n100: SWAP1\n101: PUSH2 0x006e\n104: SWAP2\n105: SWAP1\n106: PUSH2 0x01fe\n109: JUMP\n",
                "stackBalance": 4,
                "type": 1
            },
            {
                "bytecodeHex": "5b61009e56",
                "length": 5,
                "offset": 110,
                "parsedOpcodes": "110: JUMPDEST\n111: PUSH2 0x009e\n114: JUMP\n",
                "stackBalance": 0,
                "type": 1
            },
            {
                "bytecodeHex": "5b00",
                "length": 2,
                "offset": 115,
                "parsedOpcodes": "115: JUMPDEST\n116: STOP\n",
                "stackBalance": 0,
                "type": 1
            },
            {
                "bytecodeHex": "5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509056",
                "length": 41,
                "offset": 117,
                "parsedOpcodes": "117: JUMPDEST\n118: PUSH1 0x00\n120: DUP1\n121: PUSH1 0x00\n123: SWAP1\n124: SLOAD\n125: SWAP1\n126: PUSH2 0x0100\n129: EXP\n130: SWAP1\n131: DIV\n132: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n153: AND\n154: SWAP1\n155: POP\n156: SWAP1\n157: JUMP\n",
                "stackBalance": 0,
                "type": 0
            },
            {
                "bytecodeHex": "5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c57",
                "length": 84,
                "offset": 158,
                "parsedOpcodes": "158: JUMPDEST\n159: PUSH1 0x00\n161: DUP1\n162: SLOAD\n163: SWAP1\n164: PUSH2 0x0100\n167: EXP\n168: SWAP1\n169: DIV\n170: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n191: AND\n192: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n213: AND\n214: CALLER\n215: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n236: AND\n237: EQ\n238: PUSH2 0x012c\n241: JUMPI\n",
                "stackBalance": 0,
                "type": 0
            },
            {
                "bytecodeHex": "6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101239061027856",
                "length": 49,
                "offset": 242,
                "parsedOpcodes": "242: PUSH1 0x40\n244: MLOAD\n245: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n278: DUP2\n279: MSTORE\n280: PUSH1 0x04\n282: ADD\n283: PUSH2 0x0123\n286: SWAP1\n287: PUSH2 0x0278\n290: JUMP\n",
                "stackBalance": 2,
                "type": 0
            },
            {
                "bytecodeHex": "5b60405180910390fd",
                "length": 9,
                "offset": 291,
                "parsedOpcodes": "291: JUMPDEST\n292: PUSH1 0x40\n294: MLOAD\n295: DUP1\n296: SWAP2\n297: SUB\n298: SWAP1\n299: REVERT\n",
                "stackBalance": -1,
                "type": 0
            },
            {
                "bytecodeHex": "5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056",
                "length": 189,
                "offset": 300,
                "parsedOpcodes": "300: JUMPDEST\n301: DUP1\n302: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n323: AND\n324: PUSH1 0x00\n326: DUP1\n327: SLOAD\n328: SWAP1\n329: PUSH2 0x0100\n332: EXP\n333: SWAP1\n334: DIV\n335: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n356: AND\n357: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n378: AND\n379: PUSH32 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735\n412: PUSH1 0x40\n414: MLOAD\n415: PUSH1 0x40\n417: MLOAD\n418: DUP1\n419: SWAP2\n420: SUB\n421: SWAP1\n422: LOG3\n423: DUP1\n424: PUSH1 0x00\n426: DUP1\n427: PUSH2 0x0100\n430: EXP\n431: DUP2\n432: SLOAD\n433: DUP2\n434: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n455: MUL\n456: NOT\n457: AND\n458: SWAP1\n459: DUP4\n460: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n481: AND\n482: MUL\n483: OR\n484: SWAP1\n485: SSTORE\n486: POP\n487: POP\n488: JUMP\n",
                "stackBalance": -2,
                "type": 0
            },
            {
                "bytecodeHex": "5b6000813590506101f88161030956",
                "length": 15,
                "offset": 489,
                "parsedOpcodes": "489: JUMPDEST\n490: PUSH1 0x00\n492: DUP2\n493: CALLDATALOAD\n494: SWAP1\n495: POP\n496: PUSH2 0x01f8\n499: DUP2\n500: PUSH2 0x0309\n503: JUMP\n",
                "stackBalance": 1513117795,
                "type": 1
            },
            {
                "bytecodeHex": "5b9291505056",
                "length": 6,
                "offset": 504,
                "parsedOpcodes": "504: JUMPDEST\n505: SWAP3\n506: SWAP2\n507: POP\n508: POP\n509: JUMP\n",
                "stackBalance": -3,
                "type": 0
            },
            {
                "bytecodeHex": "5b60006020828403121561021457",
                "length": 14,
                "offset": 510,
                "parsedOpcodes": "510: JUMPDEST\n511: PUSH1 0x00\n513: PUSH1 0x20\n515: DUP3\n516: DUP5\n517: SUB\n518: SLT\n519: ISZERO\n520: PUSH2 0x0214\n523: JUMPI\n",
                "stackBalance": 1,
                "type": 0
            },
            {
                "bytecodeHex": "6102136102db56",
                "length": 7,
                "offset": 524,
                "parsedOpcodes": "524: PUSH2 0x0213\n527: PUSH2 0x02db\n530: JUMP\n",
                "stackBalance": 1,
                "type": 0
            },
            {
                "bytecodeHex": "5b",
                "length": 1,
                "offset": 531,
                "parsedOpcodes": "531: JUMPDEST\n",
                "stackBalance": 0,
                "type": 0
            },
            {
                "bytecodeHex": "5b6000610222848285016101e956",
                "length": 14,
                "offset": 532,
                "parsedOpcodes": "532: JUMPDEST\n533: PUSH1 0x00\n535: PUSH2 0x0222\n538: DUP5\n539: DUP3\n540: DUP6\n541: ADD\n542: PUSH2 0x01e9\n545: JUMP\n",
                "stackBalance": 4,
                "type": 0
            },
            {
                "bytecodeHex": "5b9150509291505056",
                "length": 9,
                "offset": 546,
                "parsedOpcodes": "546: JUMPDEST\n547: SWAP2\n548: POP\n549: POP\n550: SWAP3\n551: SWAP2\n552: POP\n553: POP\n554: JUMP\n",
                "stackBalance": -5,
                "type": 0
            },
            {
                "bytecodeHex": "5b610234816102a956",
                "length": 9,
                "offset": 555,
                "parsedOpcodes": "555: JUMPDEST\n556: PUSH2 0x0234\n559: DUP2\n560: PUSH2 0x02a9\n563: JUMP\n",
                "stackBalance": 2,
                "type": 0
            },
            {
                "bytecodeHex": "5b8252505056",
                "length": 6,
                "offset": 564,
                "parsedOpcodes": "564: JUMPDEST\n565: DUP3\n566: MSTORE\n567: POP\n568: POP\n569: JUMP\n",
                "stackBalance": -4,
                "type": 0
            },
            {
                "bytecodeHex": "5b600061024760138361029856",
                "length": 13,
                "offset": 570,
                "parsedOpcodes": "570: JUMPDEST\n571: PUSH1 0x00\n573: PUSH2 0x0247\n576: PUSH1 0x13\n578: DUP4\n579: PUSH2 0x0298\n582: JUMP\n",
                "stackBalance": 4,
                "type": 0
            },
            {
                "bytecodeHex": "5b9150610252826102e056",
                "length": 11,
                "offset": 583,
                "parsedOpcodes": "583: JUMPDEST\n584: SWAP2\n585: POP\n586: PUSH2 0x0252\n589: DUP3\n590: PUSH2 0x02e0\n593: JUMP\n",
                "stackBalance": 1,
                "type": 0
            },
            {
                "bytecodeHex": "5b60208201905091905056",
                "length": 11,
                "offset": 594,
                "parsedOpcodes": "594: JUMPDEST\n595: PUSH1 0x20\n597: DUP3\n598: ADD\n599: SWAP1\n600: POP\n601: SWAP2\n602: SWAP1\n603: POP\n604: JUMP\n",
                "stackBalance": -2,
                "type": 0
            },
            {
                "bytecodeHex": "5b6000602082019050610272600083018461022b56",
                "length": 21,
                "offset": 605,
                "parsedOpcodes": "605: JUMPDEST\n606: PUSH1 0x00\n608: PUSH1 0x20\n610: DUP3\n611: ADD\n612: SWAP1\n613: POP\n614: PUSH2 0x0272\n617: PUSH1 0x00\n619: DUP4\n620: ADD\n621: DUP5\n622: PUSH2 0x022b\n625: JUMP\n",
                "stackBalance": 4,
                "type": 0
            },
            {
                "bytecodeHex": "5b9291505056",
                "length": 6,
                "offset": 626,
                "parsedOpcodes": "626: JUMPDEST\n627: SWAP3\n628: SWAP2\n629: POP\n630: POP\n631: JUMP\n",
                "stackBalance": -3,
                "type": 0
            },
            {
                "bytecodeHex": "5b600060208201905081810360008301526102918161023a56",
                "length": 25,
                "offset": 632,
                "parsedOpcodes": "632: JUMPDEST\n633: PUSH1 0x00\n635: PUSH1 0x20\n637: DUP3\n638: ADD\n639: SWAP1\n640: POP\n641: DUP2\n642: DUP2\n643: SUB\n644: PUSH1 0x00\n646: DUP4\n647: ADD\n648: MSTORE\n649: PUSH2 0x0291\n652: DUP2\n653: PUSH2 0x023a\n656: JUMP\n",
                "stackBalance": 3,
                "type": 0
            },
            {
                "bytecodeHex": "5b905091905056",
                "length": 7,
                "offset": 657,
                "parsedOpcodes": "657: JUMPDEST\n658: SWAP1\n659: POP\n660: SWAP2\n661: SWAP1\n662: POP\n663: JUMP\n",
                "stackBalance": -3,
                "type": 0
            },
            {
                "bytecodeHex": "5b60008282526020820190509291505056",
                "length": 17,
                "offset": 664,
                "parsedOpcodes": "664: JUMPDEST\n665: PUSH1 0x00\n667: DUP3\n668: DUP3\n669: MSTORE\n670: PUSH1 0x20\n672: DUP3\n673: ADD\n674: SWAP1\n675: POP\n676: SWAP3\n677: SWAP2\n678: POP\n679: POP\n680: JUMP\n",
                "stackBalance": 1513124622,
                "type": 1
            },
            {
                "bytecodeHex": "5b60006102b4826102bb56",
                "length": 11,
                "offset": 681,
                "parsedOpcodes": "681: JUMPDEST\n682: PUSH1 0x00\n684: PUSH2 0x02b4\n687: DUP3\n688: PUSH2 0x02bb\n691: JUMP\n",
                "stackBalance": 3,
                "type": 0
            },
            {
                "bytecodeHex": "5b905091905056",
                "length": 7,
                "offset": 692,
                "parsedOpcodes": "692: JUMPDEST\n693: SWAP1\n694: POP\n695: SWAP2\n696: SWAP1\n697: POP\n698: JUMP\n",
                "stackBalance": -3,
                "type": 0
            },
            {
                "bytecodeHex": "5b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056",
                "length": 32,
                "offset": 699,
                "parsedOpcodes": "699: JUMPDEST\n700: PUSH1 0x00\n702: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n723: DUP3\n724: AND\n725: SWAP1\n726: POP\n727: SWAP2\n728: SWAP1\n729: POP\n730: JUMP\n",
                "stackBalance": -1,
                "type": 0
            },
            {
                "bytecodeHex": "5b600080fd",
                "length": 5,
                "offset": 731,
                "parsedOpcodes": "731: JUMPDEST\n732: PUSH1 0x00\n734: DUP1\n735: REVERT\n",
                "stackBalance": 0,
                "type": 0
            },
            {
                "bytecodeHex": "5b7f43616c6c6572206973206e6f74206f776e65720000000000000000000000000060008201525056",
                "length": 41,
                "offset": 736,
                "parsedOpcodes": "736: JUMPDEST\n737: PUSH32 0x43616c6c6572206973206e6f74206f776e657200000000000000000000000000\n770: PUSH1 0x00\n772: DUP3\n773: ADD\n774: MSTORE\n775: POP\n776: JUMP\n",
                "stackBalance": -2,
                "type": 0
            },
            {
                "bytecodeHex": "5b610312816102a956",
                "length": 9,
                "offset": 777,
                "parsedOpcodes": "777: JUMPDEST\n778: PUSH2 0x0312\n781: DUP2\n782: PUSH2 0x02a9\n785: JUMP\n",
                "stackBalance": 2,
                "type": 0
            },
            {
                "bytecodeHex": "5b811461031d57",
                "length": 7,
                "offset": 786,
                "parsedOpcodes": "786: JUMPDEST\n787: DUP2\n788: EQ\n789: PUSH2 0x031d\n792: JUMPI\n",
                "stackBalance": -1,
                "type": 0
            },
            {
                "bytecodeHex": "600080fd",
                "length": 4,
                "offset": 793,
                "parsedOpcodes": "793: PUSH1 0x00\n795: DUP1\n796: REVERT\n",
                "stackBalance": 0,
                "type": 0
            },
            {
                "bytecodeHex": "5b5056",
                "length": 3,
                "offset": 797,
                "parsedOpcodes": "797: JUMPDEST\n798: POP\n799: JUMP\n",
                "stackBalance": -2,
                "type": 0
            },
            {
                "bytecodeHex": "",
                "length": 0,
                "offset": 800,
                "parsedOpcodes": "656e74616cf564736f6c6343[0-9a-f]{6}0040[0-9a-f]*$",
                "stackBalance": 0,
                "type": 3
            }
        ],
        "remainingData": "fe",
        "successors": [
            {
                "from": 0,
                "to": [
                    12,
                    16
                ]
            },
            {
                "from": 12,
                "to": [
                    800
                ]
            },
            {
                "from": 16,
                "to": [
                    26,
                    54
                ]
            },
            {
                "from": 26,
                "to": [
                    43,
                    59
                ]
            },
            {
                "from": 43,
                "to": [
                    54,
                    89
                ]
            },
            {
                "from": 54,
                "to": [
                    800
                ]
            },
            {
                "from": 59,
                "to": [
                    117,
                    117
                ]
            },
            {
                "from": 67,
                "to": [
                    605,
                    605
                ]
            },
            {
                "from": 80,
                "to": [
                    800
                ]
            },
            {
                "from": 89,
                "to": [
                    510,
                    510
                ]
            },
            {
                "from": 110,
                "to": [
                    158,
                    158
                ]
            },
            {
                "from": 115,
                "to": [
                    800
                ]
            },
            {
                "from": 117,
                "to": [
                    67
                ]
            },
            {
                "from": 158,
                "to": [
                    242,
                    300
                ]
            },
            {
                "from": 242,
                "to": [
                    632,
                    632
                ]
            },
            {
                "from": 291,
                "to": [
                    800
                ]
            },
            {
                "from": 300,
                "to": [
                    115
                ]
            },
            {
                "from": 489,
                "to": [
                    777,
                    777
                ]
            },
            {
                "from": 504,
                "to": [
                    546
                ]
            },
            {
                "from": 510,
                "to": [
                    524,
                    532
                ]
            },
            {
                "from": 524,
                "to": [
                    731,
                    731
                ]
            },
            {
                "from": 531,
                "to": [
                    532
                ]
            },
            {
                "from": 532,
                "to": [
                    489,
                    489
                ]
            },
            {
                "from": 546,
                "to": [
                    110
                ]
            },
            {
                "from": 555,
                "to": [
                    681,
                    681
                ]
            },
            {
                "from": 564,
                "to": [
                    626
                ]
            },
            {
                "from": 570,
                "to": [
                    664,
                    664
                ]
            },
            {
                "from": 583,
                "to": [
                    736,
                    736
                ]
            },
            {
                "from": 594,
                "to": [
                    657
                ]
            },
            {
                "from": 605,
                "to": [
                    555,
                    555
                ]
            },
            {
                "from": 626,
                "to": [
                    80
                ]
            },
            {
                "from": 632,
                "to": [
                    570,
                    570
                ]
            },
            {
                "from": 657,
                "to": [
                    291
                ]
            },
            {
                "from": 664,
                "to": [
                    583
                ]
            },
            {
                "from": 681,
                "to": [
                    699,
                    699,
                    699
                ]
            },
            {
                "from": 692,
                "to": [
                    564,
                    786
                ]
            },
            {
                "from": 699,
                "to": [
                    692,
                    692
                ]
            },
            {
                "from": 731,
                "to": [
                    800
                ]
            },
            {
                "from": 736,
                "to": [
                    594
                ]
            },
            {
                "from": 777,
                "to": [
                    681,
                    681
                ]
            },
            {
                "from": 786,
                "to": [
                    793,
                    797
                ]
            },
            {
                "from": 793,
                "to": [
                    800
                ]
            },
            {
                "from": 797,
                "to": [
                    504
                ]
            },
            {
                "from": 800,
                "to": []
            }
        ]
    },
    "solidityVersion": "0.8.6"
}
