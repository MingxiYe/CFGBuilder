{
    "name": "DGCASH",
    "address": "",
    "binarySource": "60806040526040805190810160405280601281526020017f4449474954414c204341534820544f4b454e00000000000000000000000000008152506000908051906020019061004f929190610182565b506040805190810160405280600681526020017f44474341534800000000000000000000000000000000000000000000000000008152506001908051906020019061009b929190610182565b506012600260006101000a81548160ff021916908360ff1602179055506402540be4006004556305f5e1006005553480156100d557600080fd5b50600260009054906101000a900460ff1660ff16600a0a60045402600381905550600354600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610227565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101c357805160ff19168380011785556101f1565b828001600101855582156101f1579182015b828111156101f05782518255916020019190600101906101d5565b5b5090506101fe9190610202565b5090565b61022491905b80821115610220576000816000905550600101610208565b5090565b90565b610a34806102366000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f146102ea57806306fdde031461034157806318160ddd146103d1578063313ce567146103fc57806370a082311461042d5780638620410b1461048457806395d89b41146104af578063972c169e1461053f578063a9059cbb1461056a578063dd62ed3e146105b7575b6000806005543402915034810190508160076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561012357600080fd5b67016345785d8a0000341115151561013a57600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508160076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102e5573d6000803e3d6000fd5b505050005b3480156102f657600080fd5b506102ff61062e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034d57600080fd5b50610356610654565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039657808201518184015260208101905061037b565b50505050905090810190601f1680156103c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103dd57600080fd5b506103e66106f2565b6040518082815260200191505060405180910390f35b34801561040857600080fd5b506104116106f8565b604051808260ff1660ff16815260200191505060405180910390f35b34801561043957600080fd5b5061046e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070b565b6040518082815260200191505060405180910390f35b34801561049057600080fd5b50610499610723565b6040518082815260200191505060405180910390f35b3480156104bb57600080fd5b506104c4610729565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105045780820151818401526020810190506104e9565b50505050905090810190601f1680156105315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054b57600080fd5b506105546107c7565b6040518082815260200191505060405180910390f35b34801561057657600080fd5b506105b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107cd565b005b3480156105c357600080fd5b50610618600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dc565b6040518082815260200191505060405180910390f35b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106ea5780601f106106bf576101008083540402835291602001916106ea565b820191906000526020600020905b8154815290600101906020018083116106cd57829003601f168201915b505050505081565b60035481565b600260009054906101000a900460ff1681565b60076020528060005260406000206000915090505481565b60055481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107bf5780601f10610794576101008083540402835291602001916107bf565b820191906000526020600020905b8154815290600101906020018083116107a257829003601f168201915b505050505081565b60045481565b6107d8338383610801565b5050565b6008602052816000526040600020602052806000526040600020600091509150505481565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561082757600080fd5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561087557600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561090457600080fd5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050505600a165627a7a72305820699d854da51e14f900a27e973e9da172a4155d9e2de453144fc374fa2cdc883a0029",
    "binaryHash": "16b35b71",
    "isOnlyRuntime": false,
    "metadata": "a165627a7a72305820699d854da51e14f900a27e973e9da172a4155d9e2de453144fc374fa2cdc883a0029",
    "solidityVersion": "<0.5.9",
    "constructorRemainingData": "",
    "constructorCfg": {
        "bytecode": "60806040526040805190810160405280601281526020017f4449474954414c204341534820544f4b454e00000000000000000000000000008152506000908051906020019061004f929190610182565b506040805190810160405280600681526020017f44474341534800000000000000000000000000000000000000000000000000008152506001908051906020019061009b929190610182565b506012600260006101000a81548160ff021916908360ff1602179055506402540be4006004556305f5e1006005553480156100d557600080fd5b50600260009054906101000a900460ff1660ff16600a0a60045402600381905550600354600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610227565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101c357805160ff19168380011785556101f1565b828001600101855582156101f1579182015b828111156101f05782518255916020019190600101906101d5565b5b5090506101fe9190610202565b5090565b61022491905b80821115610220576000816000905550600101610208565b5090565b90565b610a34806102366000396000f300",
        "remainingData": "00",
        "nodes": [
            {
                "offset": 0,
                "length": 79,
                "type": "dispatcher",
                "stackBalance": 4,
                "bytecodeHex": "60806040526040805190810160405280601281526020017f4449474954414c204341534820544f4b454e00000000000000000000000000008152506000908051906020019061004f92919061018256",
                "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x40\n7: DUP1\n8: MLOAD\n9: SWAP1\n10: DUP2\n11: ADD\n12: PUSH1 0x40\n14: MSTORE\n15: DUP1\n16: PUSH1 0x12\n18: DUP2\n19: MSTORE\n20: PUSH1 0x20\n22: ADD\n23: PUSH32 0x4449474954414c204341534820544f4b454e0000000000000000000000000000\n56: DUP2\n57: MSTORE\n58: POP\n59: PUSH1 0x00\n61: SWAP1\n62: DUP1\n63: MLOAD\n64: SWAP1\n65: PUSH1 0x20\n67: ADD\n68: SWAP1\n69: PUSH2 0x004f\n72: SWAP3\n73: SWAP2\n74: SWAP1\n75: PUSH2 0x0182\n78: JUMP\n"
            },
            {
                "offset": 79,
                "length": 76,
                "type": "dispatcher",
                "stackBalance": 3,
                "bytecodeHex": "5b506040805190810160405280600681526020017f44474341534800000000000000000000000000000000000000000000000000008152506001908051906020019061009b92919061018256",
                "parsedOpcodes": "79: JUMPDEST\n80: POP\n81: PUSH1 0x40\n83: DUP1\n84: MLOAD\n85: SWAP1\n86: DUP2\n87: ADD\n88: PUSH1 0x40\n90: MSTORE\n91: DUP1\n92: PUSH1 0x06\n94: DUP2\n95: MSTORE\n96: PUSH1 0x20\n98: ADD\n99: PUSH32 0x4447434153480000000000000000000000000000000000000000000000000000\n132: DUP2\n133: MSTORE\n134: POP\n135: PUSH1 0x01\n137: SWAP1\n138: DUP1\n139: MLOAD\n140: SWAP1\n141: PUSH1 0x20\n143: ADD\n144: SWAP1\n145: PUSH2 0x009b\n148: SWAP3\n149: SWAP2\n150: SWAP1\n151: PUSH2 0x0182\n154: JUMP\n"
            },
            {
                "offset": 155,
                "length": 54,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b506012600260006101000a81548160ff021916908360ff1602179055506402540be4006004556305f5e1006005553480156100d557",
                "parsedOpcodes": "155: JUMPDEST\n156: POP\n157: PUSH1 0x12\n159: PUSH1 0x02\n161: PUSH1 0x00\n163: PUSH2 0x0100\n166: EXP\n167: DUP2\n168: SLOAD\n169: DUP2\n170: PUSH1 0xff\n172: MUL\n173: NOT\n174: AND\n175: SWAP1\n176: DUP4\n177: PUSH1 0xff\n179: AND\n180: MUL\n181: OR\n182: SWAP1\n183: SSTORE\n184: POP\n185: PUSH5 0x02540be400\n191: PUSH1 0x04\n193: SSTORE\n194: PUSH4 0x05f5e100\n199: PUSH1 0x05\n201: SSTORE\n202: CALLVALUE\n203: DUP1\n204: ISZERO\n205: PUSH2 0x00d5\n208: JUMPI\n"
            },
            {
                "offset": 209,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "209: PUSH1 0x00\n211: DUP1\n212: REVERT\n"
            },
            {
                "offset": 213,
                "length": 173,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b50600260009054906101000a900460ff1660ff16600a0a60045402600381905550600354600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061022756",
                "parsedOpcodes": "213: JUMPDEST\n214: POP\n215: PUSH1 0x02\n217: PUSH1 0x00\n219: SWAP1\n220: SLOAD\n221: SWAP1\n222: PUSH2 0x0100\n225: EXP\n226: SWAP1\n227: DIV\n228: PUSH1 0xff\n230: AND\n231: PUSH1 0xff\n233: AND\n234: PUSH1 0x0a\n236: EXP\n237: PUSH1 0x04\n239: SLOAD\n240: MUL\n241: PUSH1 0x03\n243: DUP2\n244: SWAP1\n245: SSTORE\n246: POP\n247: PUSH1 0x03\n249: SLOAD\n250: PUSH1 0x07\n252: PUSH1 0x00\n254: CALLER\n255: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n276: AND\n277: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n298: AND\n299: DUP2\n300: MSTORE\n301: PUSH1 0x20\n303: ADD\n304: SWAP1\n305: DUP2\n306: MSTORE\n307: PUSH1 0x20\n309: ADD\n310: PUSH1 0x00\n312: SHA3\n313: DUP2\n314: SWAP1\n315: SSTORE\n316: POP\n317: CALLER\n318: PUSH1 0x06\n320: PUSH1 0x00\n322: PUSH2 0x0100\n325: EXP\n326: DUP2\n327: SLOAD\n328: DUP2\n329: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n350: MUL\n351: NOT\n352: AND\n353: SWAP1\n354: DUP4\n355: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n376: AND\n377: MUL\n378: OR\n379: SWAP1\n380: SSTORE\n381: POP\n382: PUSH2 0x0227\n385: JUMP\n"
            },
            {
                "offset": 386,
                "length": 49,
                "type": "fallback",
                "stackBalance": 2,
                "bytecodeHex": "5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101c357",
                "parsedOpcodes": "386: JUMPDEST\n387: DUP3\n388: DUP1\n389: SLOAD\n390: PUSH1 0x01\n392: DUP2\n393: PUSH1 0x01\n395: AND\n396: ISZERO\n397: PUSH2 0x0100\n400: MUL\n401: SUB\n402: AND\n403: PUSH1 0x02\n405: SWAP1\n406: DIV\n407: SWAP1\n408: PUSH1 0x00\n410: MSTORE\n411: PUSH1 0x20\n413: PUSH1 0x00\n415: SHA3\n416: SWAP1\n417: PUSH1 0x1f\n419: ADD\n420: PUSH1 0x20\n422: SWAP1\n423: DIV\n424: DUP2\n425: ADD\n426: SWAP3\n427: DUP3\n428: PUSH1 0x1f\n430: LT\n431: PUSH2 0x01c3\n434: JUMPI\n"
            },
            {
                "offset": 435,
                "length": 16,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "805160ff19168380011785556101f156",
                "parsedOpcodes": "435: DUP1\n436: MLOAD\n437: PUSH1 0xff\n439: NOT\n440: AND\n441: DUP4\n442: DUP1\n443: ADD\n444: OR\n445: DUP6\n446: SSTORE\n447: PUSH2 0x01f1\n450: JUMP\n"
            },
            {
                "offset": 451,
                "length": 15,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b828001600101855582156101f157",
                "parsedOpcodes": "451: JUMPDEST\n452: DUP3\n453: DUP1\n454: ADD\n455: PUSH1 0x01\n457: ADD\n458: DUP6\n459: SSTORE\n460: DUP3\n461: ISZERO\n462: PUSH2 0x01f1\n465: JUMPI\n"
            },
            {
                "offset": 466,
                "length": 3,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "918201",
                "parsedOpcodes": "466: SWAP2\n467: DUP3\n468: ADD\n"
            },
            {
                "offset": 469,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b828111156101f057",
                "parsedOpcodes": "469: JUMPDEST\n470: DUP3\n471: DUP2\n472: GT\n473: ISZERO\n474: PUSH2 0x01f0\n477: JUMPI\n"
            },
            {
                "offset": 478,
                "length": 18,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "82518255916020019190600101906101d556",
                "parsedOpcodes": "478: DUP3\n479: MLOAD\n480: DUP3\n481: SSTORE\n482: SWAP2\n483: PUSH1 0x20\n485: ADD\n486: SWAP2\n487: SWAP1\n488: PUSH1 0x01\n490: ADD\n491: SWAP1\n492: PUSH2 0x01d5\n495: JUMP\n"
            },
            {
                "offset": 496,
                "length": 1,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b",
                "parsedOpcodes": "496: JUMPDEST\n"
            },
            {
                "offset": 497,
                "length": 13,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b5090506101fe919061020256",
                "parsedOpcodes": "497: JUMPDEST\n498: POP\n499: SWAP1\n500: POP\n501: PUSH2 0x01fe\n504: SWAP2\n505: SWAP1\n506: PUSH2 0x0202\n509: JUMP\n"
            },
            {
                "offset": 510,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": -2,
                "bytecodeHex": "5b509056",
                "parsedOpcodes": "510: JUMPDEST\n511: POP\n512: SWAP1\n513: JUMP\n"
            },
            {
                "offset": 514,
                "length": 6,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b6102249190",
                "parsedOpcodes": "514: JUMPDEST\n515: PUSH2 0x0224\n518: SWAP2\n519: SWAP1\n"
            },
            {
                "offset": 520,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b8082111561022057",
                "parsedOpcodes": "520: JUMPDEST\n521: DUP1\n522: DUP3\n523: GT\n524: ISZERO\n525: PUSH2 0x0220\n528: JUMPI\n"
            },
            {
                "offset": 529,
                "length": 15,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600081600090555060010161020856",
                "parsedOpcodes": "529: PUSH1 0x00\n531: DUP2\n532: PUSH1 0x00\n534: SWAP1\n535: SSTORE\n536: POP\n537: PUSH1 0x01\n539: ADD\n540: PUSH2 0x0208\n543: JUMP\n"
            },
            {
                "offset": 544,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": -2,
                "bytecodeHex": "5b509056",
                "parsedOpcodes": "544: JUMPDEST\n545: POP\n546: SWAP1\n547: JUMP\n"
            },
            {
                "offset": 548,
                "length": 3,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b9056",
                "parsedOpcodes": "548: JUMPDEST\n549: SWAP1\n550: JUMP\n"
            },
            {
                "offset": 551,
                "length": 14,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b610a34806102366000396000f3",
                "parsedOpcodes": "551: JUMPDEST\n552: PUSH2 0x0a34\n555: DUP1\n556: PUSH2 0x0236\n559: PUSH1 0x00\n561: CODECOPY\n562: PUSH1 0x00\n564: RETURN\n"
            },
            {
                "offset": 565,
                "length": 0,
                "type": "exit",
                "stackBalance": 0,
                "bytecodeHex": "",
                "parsedOpcodes": "565: EXIT BLOCK"
            }
        ],
        "successors": [
            {
                "from": 0,
                "to": [
                    386,
                    386
                ]
            },
            {
                "from": 79,
                "to": [
                    386,
                    386
                ]
            },
            {
                "from": 155,
                "to": [
                    209,
                    213
                ]
            },
            {
                "from": 209,
                "to": [
                    565
                ]
            },
            {
                "from": 213,
                "to": [
                    551,
                    551
                ]
            },
            {
                "from": 386,
                "to": [
                    435,
                    451
                ]
            },
            {
                "from": 435,
                "to": [
                    497,
                    497,
                    497
                ]
            },
            {
                "from": 451,
                "to": [
                    466,
                    497
                ]
            },
            {
                "from": 466,
                "to": [
                    469
                ]
            },
            {
                "from": 469,
                "to": [
                    478,
                    496
                ]
            },
            {
                "from": 478,
                "to": [
                    469,
                    469,
                    469
                ]
            },
            {
                "from": 496,
                "to": [
                    497
                ]
            },
            {
                "from": 497,
                "to": [
                    514,
                    514,
                    514,
                    514,
                    514,
                    514,
                    514
                ]
            },
            {
                "from": 510,
                "to": [
                    79,
                    155
                ]
            },
            {
                "from": 514,
                "to": [
                    520
                ]
            },
            {
                "from": 520,
                "to": [
                    529,
                    544
                ]
            },
            {
                "from": 529,
                "to": [
                    520,
                    520,
                    520
                ]
            },
            {
                "from": 544,
                "to": [
                    548,
                    548
                ]
            },
            {
                "from": 548,
                "to": [
                    510,
                    510
                ]
            },
            {
                "from": 551,
                "to": [
                    565
                ]
            },
            {
                "from": 565,
                "to": []
            }
        ],
        "buildReport": {
            "directJumpTargetErrors": 0,
            "orphanJumpTargetNullErrors": 0,
            "orphanJumpTargetUnknownErrors": 0,
            "loopDepthExceededErrors": 0,
            "multipleRootNodesErrors": 0,
            "stackExceededErrorss": 0,
            "blockLimitErrors": 0,
            "criticalErrors": 0,
            "errorLog": "",
            "buildTimeMillis": 0
        }
    },
    "runtimeCfg": {
        "bytecode": "6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f146102ea57806306fdde031461034157806318160ddd146103d1578063313ce567146103fc57806370a082311461042d5780638620410b1461048457806395d89b41146104af578063972c169e1461053f578063a9059cbb1461056a578063dd62ed3e146105b7575b6000806005543402915034810190508160076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561012357600080fd5b67016345785d8a0000341115151561013a57600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508160076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102e5573d6000803e3d6000fd5b505050005b3480156102f657600080fd5b506102ff61062e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034d57600080fd5b50610356610654565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039657808201518184015260208101905061037b565b50505050905090810190601f1680156103c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103dd57600080fd5b506103e66106f2565b6040518082815260200191505060405180910390f35b34801561040857600080fd5b506104116106f8565b604051808260ff1660ff16815260200191505060405180910390f35b34801561043957600080fd5b5061046e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070b565b6040518082815260200191505060405180910390f35b34801561049057600080fd5b50610499610723565b6040518082815260200191505060405180910390f35b3480156104bb57600080fd5b506104c4610729565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105045780820151818401526020810190506104e9565b50505050905090810190601f1680156105315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054b57600080fd5b506105546107c7565b6040518082815260200191505060405180910390f35b34801561057657600080fd5b506105b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107cd565b005b3480156105c357600080fd5b50610618600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dc565b6040518082815260200191505060405180910390f35b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106ea5780601f106106bf576101008083540402835291602001916106ea565b820191906000526020600020905b8154815290600101906020018083116106cd57829003601f168201915b505050505081565b60035481565b600260009054906101000a900460ff1681565b60076020528060005260406000206000915090505481565b60055481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107bf5780601f10610794576101008083540402835291602001916107bf565b820191906000526020600020905b8154815290600101906020018083116107a257829003601f168201915b505050505081565b60045481565b6107d8338383610801565b5050565b6008602052816000526040600020602052806000526040600020600091509150505481565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561082757600080fd5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561087557600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561090457600080fd5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050505600",
        "remainingData": "00",
        "nodes": [
            {
                "offset": 0,
                "length": 13,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "6080604052600436106100a457",
                "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x00a4\n12: JUMPI\n"
            },
            {
                "offset": 13,
                "length": 52,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f146102ea57",
                "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x02d05d3f\n60: EQ\n61: PUSH2 0x02ea\n64: JUMPI\n"
            },
            {
                "offset": 65,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "806306fdde031461034157",
                "parsedOpcodes": "65: DUP1\n66: PUSH4 0x06fdde03\n71: EQ\n72: PUSH2 0x0341\n75: JUMPI\n"
            },
            {
                "offset": 76,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "806318160ddd146103d157",
                "parsedOpcodes": "76: DUP1\n77: PUSH4 0x18160ddd\n82: EQ\n83: PUSH2 0x03d1\n86: JUMPI\n"
            },
            {
                "offset": 87,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "8063313ce567146103fc57",
                "parsedOpcodes": "87: DUP1\n88: PUSH4 0x313ce567\n93: EQ\n94: PUSH2 0x03fc\n97: JUMPI\n"
            },
            {
                "offset": 98,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "806370a082311461042d57",
                "parsedOpcodes": "98: DUP1\n99: PUSH4 0x70a08231\n104: EQ\n105: PUSH2 0x042d\n108: JUMPI\n"
            },
            {
                "offset": 109,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "80638620410b1461048457",
                "parsedOpcodes": "109: DUP1\n110: PUSH4 0x8620410b\n115: EQ\n116: PUSH2 0x0484\n119: JUMPI\n"
            },
            {
                "offset": 120,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "806395d89b41146104af57",
                "parsedOpcodes": "120: DUP1\n121: PUSH4 0x95d89b41\n126: EQ\n127: PUSH2 0x04af\n130: JUMPI\n"
            },
            {
                "offset": 131,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "8063972c169e1461053f57",
                "parsedOpcodes": "131: DUP1\n132: PUSH4 0x972c169e\n137: EQ\n138: PUSH2 0x053f\n141: JUMPI\n"
            },
            {
                "offset": 142,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "8063a9059cbb1461056a57",
                "parsedOpcodes": "142: DUP1\n143: PUSH4 0xa9059cbb\n148: EQ\n149: PUSH2 0x056a\n152: JUMPI\n"
            },
            {
                "offset": 153,
                "length": 11,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "8063dd62ed3e146105b757",
                "parsedOpcodes": "153: DUP1\n154: PUSH4 0xdd62ed3e\n159: EQ\n160: PUSH2 0x05b7\n163: JUMPI\n"
            },
            {
                "offset": 164,
                "length": 123,
                "type": "fallback",
                "stackBalance": 2,
                "bytecodeHex": "5b6000806005543402915034810190508160076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561012357",
                "parsedOpcodes": "164: JUMPDEST\n165: PUSH1 0x00\n167: DUP1\n168: PUSH1 0x05\n170: SLOAD\n171: CALLVALUE\n172: MUL\n173: SWAP2\n174: POP\n175: CALLVALUE\n176: DUP2\n177: ADD\n178: SWAP1\n179: POP\n180: DUP2\n181: PUSH1 0x07\n183: PUSH1 0x00\n185: PUSH1 0x06\n187: PUSH1 0x00\n189: SWAP1\n190: SLOAD\n191: SWAP1\n192: PUSH2 0x0100\n195: EXP\n196: SWAP1\n197: DIV\n198: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n219: AND\n220: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n241: AND\n242: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n263: AND\n264: DUP2\n265: MSTORE\n266: PUSH1 0x20\n268: ADD\n269: SWAP1\n270: DUP2\n271: MSTORE\n272: PUSH1 0x20\n274: ADD\n275: PUSH1 0x00\n277: SHA3\n278: SLOAD\n279: LT\n280: ISZERO\n281: ISZERO\n282: ISZERO\n283: PUSH2 0x0123\n286: JUMPI\n"
            },
            {
                "offset": 287,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "287: PUSH1 0x00\n289: DUP1\n290: REVERT\n"
            },
            {
                "offset": 291,
                "length": 19,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b67016345785d8a0000341115151561013a57",
                "parsedOpcodes": "291: JUMPDEST\n292: PUSH8 0x016345785d8a0000\n301: CALLVALUE\n302: GT\n303: ISZERO\n304: ISZERO\n305: ISZERO\n306: PUSH2 0x013a\n309: JUMPI\n"
            },
            {
                "offset": 310,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "310: PUSH1 0x00\n312: DUP1\n313: REVERT\n"
            },
            {
                "offset": 314,
                "length": 418,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508160076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102e557",
                "parsedOpcodes": "314: JUMPDEST\n315: DUP2\n316: PUSH1 0x07\n318: PUSH1 0x00\n320: CALLER\n321: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n342: AND\n343: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n364: AND\n365: DUP2\n366: MSTORE\n367: PUSH1 0x20\n369: ADD\n370: SWAP1\n371: DUP2\n372: MSTORE\n373: PUSH1 0x20\n375: ADD\n376: PUSH1 0x00\n378: SHA3\n379: PUSH1 0x00\n381: DUP3\n382: DUP3\n383: SLOAD\n384: ADD\n385: SWAP3\n386: POP\n387: POP\n388: DUP2\n389: SWAP1\n390: SSTORE\n391: POP\n392: DUP2\n393: PUSH1 0x07\n395: PUSH1 0x00\n397: PUSH1 0x06\n399: PUSH1 0x00\n401: SWAP1\n402: SLOAD\n403: SWAP1\n404: PUSH2 0x0100\n407: EXP\n408: SWAP1\n409: DIV\n410: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n431: AND\n432: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n453: AND\n454: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n475: AND\n476: DUP2\n477: MSTORE\n478: PUSH1 0x20\n480: ADD\n481: SWAP1\n482: DUP2\n483: MSTORE\n484: PUSH1 0x20\n486: ADD\n487: PUSH1 0x00\n489: SHA3\n490: PUSH1 0x00\n492: DUP3\n493: DUP3\n494: SLOAD\n495: SUB\n496: SWAP3\n497: POP\n498: POP\n499: DUP2\n500: SWAP1\n501: SSTORE\n502: POP\n503: CALLER\n504: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n525: AND\n526: PUSH1 0x06\n528: PUSH1 0x00\n530: SWAP1\n531: SLOAD\n532: SWAP1\n533: PUSH2 0x0100\n536: EXP\n537: SWAP1\n538: DIV\n539: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n560: AND\n561: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n582: AND\n583: PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n616: DUP5\n617: PUSH1 0x40\n619: MLOAD\n620: DUP1\n621: DUP3\n622: DUP2\n623: MSTORE\n624: PUSH1 0x20\n626: ADD\n627: SWAP2\n628: POP\n629: POP\n630: PUSH1 0x40\n632: MLOAD\n633: DUP1\n634: SWAP2\n635: SUB\n636: SWAP1\n637: LOG3\n638: PUSH1 0x06\n640: PUSH1 0x00\n642: SWAP1\n643: SLOAD\n644: SWAP1\n645: PUSH2 0x0100\n648: EXP\n649: SWAP1\n650: DIV\n651: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n672: AND\n673: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n694: AND\n695: PUSH2 0x08fc\n698: DUP3\n699: SWAP1\n700: DUP2\n701: ISZERO\n702: MUL\n703: SWAP1\n704: PUSH1 0x40\n706: MLOAD\n707: PUSH1 0x00\n709: PUSH1 0x40\n711: MLOAD\n712: DUP1\n713: DUP4\n714: SUB\n715: DUP2\n716: DUP6\n717: DUP9\n718: DUP9\n719: CALL\n720: SWAP4\n721: POP\n722: POP\n723: POP\n724: POP\n725: ISZERO\n726: DUP1\n727: ISZERO\n728: PUSH2 0x02e5\n731: JUMPI\n"
            },
            {
                "offset": 732,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "3d6000803e3d6000fd",
                "parsedOpcodes": "732: RETURNDATASIZE\n733: PUSH1 0x00\n735: DUP1\n736: RETURNDATACOPY\n737: RETURNDATASIZE\n738: PUSH1 0x00\n740: REVERT\n"
            },
            {
                "offset": 741,
                "length": 5,
                "type": "dispatcher",
                "stackBalance": -3,
                "bytecodeHex": "5b50505000",
                "parsedOpcodes": "741: JUMPDEST\n742: POP\n743: POP\n744: POP\n745: STOP\n"
            },
            {
                "offset": 746,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b3480156102f657",
                "parsedOpcodes": "746: JUMPDEST\n747: CALLVALUE\n748: DUP1\n749: ISZERO\n750: PUSH2 0x02f6\n753: JUMPI\n"
            },
            {
                "offset": 754,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "754: PUSH1 0x00\n756: DUP1\n757: REVERT\n"
            },
            {
                "offset": 758,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b506102ff61062e56",
                "parsedOpcodes": "758: JUMPDEST\n759: POP\n760: PUSH2 0x02ff\n763: PUSH2 0x062e\n766: JUMP\n"
            },
            {
                "offset": 767,
                "length": 66,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f3",
                "parsedOpcodes": "767: JUMPDEST\n768: PUSH1 0x40\n770: MLOAD\n771: DUP1\n772: DUP3\n773: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n794: AND\n795: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n816: AND\n817: DUP2\n818: MSTORE\n819: PUSH1 0x20\n821: ADD\n822: SWAP2\n823: POP\n824: POP\n825: PUSH1 0x40\n827: MLOAD\n828: DUP1\n829: SWAP2\n830: SUB\n831: SWAP1\n832: RETURN\n"
            },
            {
                "offset": 833,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b34801561034d57",
                "parsedOpcodes": "833: JUMPDEST\n834: CALLVALUE\n835: DUP1\n836: ISZERO\n837: PUSH2 0x034d\n840: JUMPI\n"
            },
            {
                "offset": 841,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "841: PUSH1 0x00\n843: DUP1\n844: REVERT\n"
            },
            {
                "offset": 845,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b5061035661065456",
                "parsedOpcodes": "845: JUMPDEST\n846: POP\n847: PUSH2 0x0356\n850: PUSH2 0x0654\n853: JUMP\n"
            },
            {
                "offset": 854,
                "length": 37,
                "type": "dispatcher",
                "stackBalance": 9,
                "bytecodeHex": "5b604051808060200182810382528381815181526020019150805190602001908083836000",
                "parsedOpcodes": "854: JUMPDEST\n855: PUSH1 0x40\n857: MLOAD\n858: DUP1\n859: DUP1\n860: PUSH1 0x20\n862: ADD\n863: DUP3\n864: DUP2\n865: SUB\n866: DUP3\n867: MSTORE\n868: DUP4\n869: DUP2\n870: DUP2\n871: MLOAD\n872: DUP2\n873: MSTORE\n874: PUSH1 0x20\n876: ADD\n877: SWAP2\n878: POP\n879: DUP1\n880: MLOAD\n881: SWAP1\n882: PUSH1 0x20\n884: ADD\n885: SWAP1\n886: DUP1\n887: DUP4\n888: DUP4\n889: PUSH1 0x00\n"
            },
            {
                "offset": 891,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b8381101561039657",
                "parsedOpcodes": "891: JUMPDEST\n892: DUP4\n893: DUP2\n894: LT\n895: ISZERO\n896: PUSH2 0x0396\n899: JUMPI\n"
            },
            {
                "offset": 900,
                "length": 18,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "808201518184015260208101905061037b56",
                "parsedOpcodes": "900: DUP1\n901: DUP3\n902: ADD\n903: MLOAD\n904: DUP2\n905: DUP5\n906: ADD\n907: MSTORE\n908: PUSH1 0x20\n910: DUP2\n911: ADD\n912: SWAP1\n913: POP\n914: PUSH2 0x037b\n917: JUMP\n"
            },
            {
                "offset": 918,
                "length": 20,
                "type": "dispatcher",
                "stackBalance": -5,
                "bytecodeHex": "5b50505050905090810190601f1680156103c357",
                "parsedOpcodes": "918: JUMPDEST\n919: POP\n920: POP\n921: POP\n922: POP\n923: SWAP1\n924: POP\n925: SWAP1\n926: DUP2\n927: ADD\n928: SWAP1\n929: PUSH1 0x1f\n931: AND\n932: DUP1\n933: ISZERO\n934: PUSH2 0x03c3\n937: JUMPI\n"
            },
            {
                "offset": 938,
                "length": 25,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
                "parsedOpcodes": "938: DUP1\n939: DUP3\n940: SUB\n941: DUP1\n942: MLOAD\n943: PUSH1 0x01\n945: DUP4\n946: PUSH1 0x20\n948: SUB\n949: PUSH2 0x0100\n952: EXP\n953: SUB\n954: NOT\n955: AND\n956: DUP2\n957: MSTORE\n958: PUSH1 0x20\n960: ADD\n961: SWAP2\n962: POP\n"
            },
            {
                "offset": 963,
                "length": 14,
                "type": "dispatcher",
                "stackBalance": -5,
                "bytecodeHex": "5b509250505060405180910390f3",
                "parsedOpcodes": "963: JUMPDEST\n964: POP\n965: SWAP3\n966: POP\n967: POP\n968: POP\n969: PUSH1 0x40\n971: MLOAD\n972: DUP1\n973: SWAP2\n974: SUB\n975: SWAP1\n976: RETURN\n"
            },
            {
                "offset": 977,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b3480156103dd57",
                "parsedOpcodes": "977: JUMPDEST\n978: CALLVALUE\n979: DUP1\n980: ISZERO\n981: PUSH2 0x03dd\n984: JUMPI\n"
            },
            {
                "offset": 985,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "985: PUSH1 0x00\n987: DUP1\n988: REVERT\n"
            },
            {
                "offset": 989,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b506103e66106f256",
                "parsedOpcodes": "989: JUMPDEST\n990: POP\n991: PUSH2 0x03e6\n994: PUSH2 0x06f2\n997: JUMP\n"
            },
            {
                "offset": 998,
                "length": 22,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
                "parsedOpcodes": "998: JUMPDEST\n999: PUSH1 0x40\n1001: MLOAD\n1002: DUP1\n1003: DUP3\n1004: DUP2\n1005: MSTORE\n1006: PUSH1 0x20\n1008: ADD\n1009: SWAP2\n1010: POP\n1011: POP\n1012: PUSH1 0x40\n1014: MLOAD\n1015: DUP1\n1016: SWAP2\n1017: SUB\n1018: SWAP1\n1019: RETURN\n"
            },
            {
                "offset": 1020,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b34801561040857",
                "parsedOpcodes": "1020: JUMPDEST\n1021: CALLVALUE\n1022: DUP1\n1023: ISZERO\n1024: PUSH2 0x0408\n1027: JUMPI\n"
            },
            {
                "offset": 1028,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1028: PUSH1 0x00\n1030: DUP1\n1031: REVERT\n"
            },
            {
                "offset": 1032,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b506104116106f856",
                "parsedOpcodes": "1032: JUMPDEST\n1033: POP\n1034: PUSH2 0x0411\n1037: PUSH2 0x06f8\n1040: JUMP\n"
            },
            {
                "offset": 1041,
                "length": 28,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b604051808260ff1660ff16815260200191505060405180910390f3",
                "parsedOpcodes": "1041: JUMPDEST\n1042: PUSH1 0x40\n1044: MLOAD\n1045: DUP1\n1046: DUP3\n1047: PUSH1 0xff\n1049: AND\n1050: PUSH1 0xff\n1052: AND\n1053: DUP2\n1054: MSTORE\n1055: PUSH1 0x20\n1057: ADD\n1058: SWAP2\n1059: POP\n1060: POP\n1061: PUSH1 0x40\n1063: MLOAD\n1064: DUP1\n1065: SWAP2\n1066: SUB\n1067: SWAP1\n1068: RETURN\n"
            },
            {
                "offset": 1069,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b34801561043957",
                "parsedOpcodes": "1069: JUMPDEST\n1070: CALLVALUE\n1071: DUP1\n1072: ISZERO\n1073: PUSH2 0x0439\n1076: JUMPI\n"
            },
            {
                "offset": 1077,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1077: PUSH1 0x00\n1079: DUP1\n1080: REVERT\n"
            },
            {
                "offset": 1081,
                "length": 53,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b5061046e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070b56",
                "parsedOpcodes": "1081: JUMPDEST\n1082: POP\n1083: PUSH2 0x046e\n1086: PUSH1 0x04\n1088: DUP1\n1089: CALLDATASIZE\n1090: SUB\n1091: DUP2\n1092: ADD\n1093: SWAP1\n1094: DUP1\n1095: DUP1\n1096: CALLDATALOAD\n1097: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1118: AND\n1119: SWAP1\n1120: PUSH1 0x20\n1122: ADD\n1123: SWAP1\n1124: SWAP3\n1125: SWAP2\n1126: SWAP1\n1127: POP\n1128: POP\n1129: POP\n1130: PUSH2 0x070b\n1133: JUMP\n"
            },
            {
                "offset": 1134,
                "length": 22,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
                "parsedOpcodes": "1134: JUMPDEST\n1135: PUSH1 0x40\n1137: MLOAD\n1138: DUP1\n1139: DUP3\n1140: DUP2\n1141: MSTORE\n1142: PUSH1 0x20\n1144: ADD\n1145: SWAP2\n1146: POP\n1147: POP\n1148: PUSH1 0x40\n1150: MLOAD\n1151: DUP1\n1152: SWAP2\n1153: SUB\n1154: SWAP1\n1155: RETURN\n"
            },
            {
                "offset": 1156,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b34801561049057",
                "parsedOpcodes": "1156: JUMPDEST\n1157: CALLVALUE\n1158: DUP1\n1159: ISZERO\n1160: PUSH2 0x0490\n1163: JUMPI\n"
            },
            {
                "offset": 1164,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1164: PUSH1 0x00\n1166: DUP1\n1167: REVERT\n"
            },
            {
                "offset": 1168,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b5061049961072356",
                "parsedOpcodes": "1168: JUMPDEST\n1169: POP\n1170: PUSH2 0x0499\n1173: PUSH2 0x0723\n1176: JUMP\n"
            },
            {
                "offset": 1177,
                "length": 22,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
                "parsedOpcodes": "1177: JUMPDEST\n1178: PUSH1 0x40\n1180: MLOAD\n1181: DUP1\n1182: DUP3\n1183: DUP2\n1184: MSTORE\n1185: PUSH1 0x20\n1187: ADD\n1188: SWAP2\n1189: POP\n1190: POP\n1191: PUSH1 0x40\n1193: MLOAD\n1194: DUP1\n1195: SWAP2\n1196: SUB\n1197: SWAP1\n1198: RETURN\n"
            },
            {
                "offset": 1199,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b3480156104bb57",
                "parsedOpcodes": "1199: JUMPDEST\n1200: CALLVALUE\n1201: DUP1\n1202: ISZERO\n1203: PUSH2 0x04bb\n1206: JUMPI\n"
            },
            {
                "offset": 1207,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1207: PUSH1 0x00\n1209: DUP1\n1210: REVERT\n"
            },
            {
                "offset": 1211,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b506104c461072956",
                "parsedOpcodes": "1211: JUMPDEST\n1212: POP\n1213: PUSH2 0x04c4\n1216: PUSH2 0x0729\n1219: JUMP\n"
            },
            {
                "offset": 1220,
                "length": 37,
                "type": "dispatcher",
                "stackBalance": 9,
                "bytecodeHex": "5b604051808060200182810382528381815181526020019150805190602001908083836000",
                "parsedOpcodes": "1220: JUMPDEST\n1221: PUSH1 0x40\n1223: MLOAD\n1224: DUP1\n1225: DUP1\n1226: PUSH1 0x20\n1228: ADD\n1229: DUP3\n1230: DUP2\n1231: SUB\n1232: DUP3\n1233: MSTORE\n1234: DUP4\n1235: DUP2\n1236: DUP2\n1237: MLOAD\n1238: DUP2\n1239: MSTORE\n1240: PUSH1 0x20\n1242: ADD\n1243: SWAP2\n1244: POP\n1245: DUP1\n1246: MLOAD\n1247: SWAP1\n1248: PUSH1 0x20\n1250: ADD\n1251: SWAP1\n1252: DUP1\n1253: DUP4\n1254: DUP4\n1255: PUSH1 0x00\n"
            },
            {
                "offset": 1257,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b8381101561050457",
                "parsedOpcodes": "1257: JUMPDEST\n1258: DUP4\n1259: DUP2\n1260: LT\n1261: ISZERO\n1262: PUSH2 0x0504\n1265: JUMPI\n"
            },
            {
                "offset": 1266,
                "length": 18,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "80820151818401526020810190506104e956",
                "parsedOpcodes": "1266: DUP1\n1267: DUP3\n1268: ADD\n1269: MLOAD\n1270: DUP2\n1271: DUP5\n1272: ADD\n1273: MSTORE\n1274: PUSH1 0x20\n1276: DUP2\n1277: ADD\n1278: SWAP1\n1279: POP\n1280: PUSH2 0x04e9\n1283: JUMP\n"
            },
            {
                "offset": 1284,
                "length": 20,
                "type": "dispatcher",
                "stackBalance": -5,
                "bytecodeHex": "5b50505050905090810190601f16801561053157",
                "parsedOpcodes": "1284: JUMPDEST\n1285: POP\n1286: POP\n1287: POP\n1288: POP\n1289: SWAP1\n1290: POP\n1291: SWAP1\n1292: DUP2\n1293: ADD\n1294: SWAP1\n1295: PUSH1 0x1f\n1297: AND\n1298: DUP1\n1299: ISZERO\n1300: PUSH2 0x0531\n1303: JUMPI\n"
            },
            {
                "offset": 1304,
                "length": 25,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
                "parsedOpcodes": "1304: DUP1\n1305: DUP3\n1306: SUB\n1307: DUP1\n1308: MLOAD\n1309: PUSH1 0x01\n1311: DUP4\n1312: PUSH1 0x20\n1314: SUB\n1315: PUSH2 0x0100\n1318: EXP\n1319: SUB\n1320: NOT\n1321: AND\n1322: DUP2\n1323: MSTORE\n1324: PUSH1 0x20\n1326: ADD\n1327: SWAP2\n1328: POP\n"
            },
            {
                "offset": 1329,
                "length": 14,
                "type": "dispatcher",
                "stackBalance": -5,
                "bytecodeHex": "5b509250505060405180910390f3",
                "parsedOpcodes": "1329: JUMPDEST\n1330: POP\n1331: SWAP3\n1332: POP\n1333: POP\n1334: POP\n1335: PUSH1 0x40\n1337: MLOAD\n1338: DUP1\n1339: SWAP2\n1340: SUB\n1341: SWAP1\n1342: RETURN\n"
            },
            {
                "offset": 1343,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b34801561054b57",
                "parsedOpcodes": "1343: JUMPDEST\n1344: CALLVALUE\n1345: DUP1\n1346: ISZERO\n1347: PUSH2 0x054b\n1350: JUMPI\n"
            },
            {
                "offset": 1351,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1351: PUSH1 0x00\n1353: DUP1\n1354: REVERT\n"
            },
            {
                "offset": 1355,
                "length": 9,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b506105546107c756",
                "parsedOpcodes": "1355: JUMPDEST\n1356: POP\n1357: PUSH2 0x0554\n1360: PUSH2 0x07c7\n1363: JUMP\n"
            },
            {
                "offset": 1364,
                "length": 22,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
                "parsedOpcodes": "1364: JUMPDEST\n1365: PUSH1 0x40\n1367: MLOAD\n1368: DUP1\n1369: DUP3\n1370: DUP2\n1371: MSTORE\n1372: PUSH1 0x20\n1374: ADD\n1375: SWAP2\n1376: POP\n1377: POP\n1378: PUSH1 0x40\n1380: MLOAD\n1381: DUP1\n1382: SWAP2\n1383: SUB\n1384: SWAP1\n1385: RETURN\n"
            },
            {
                "offset": 1386,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b34801561057657",
                "parsedOpcodes": "1386: JUMPDEST\n1387: CALLVALUE\n1388: DUP1\n1389: ISZERO\n1390: PUSH2 0x0576\n1393: JUMPI\n"
            },
            {
                "offset": 1394,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1394: PUSH1 0x00\n1396: DUP1\n1397: REVERT\n"
            },
            {
                "offset": 1398,
                "length": 63,
                "type": "dispatcher",
                "stackBalance": 2,
                "bytecodeHex": "5b506105b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107cd56",
                "parsedOpcodes": "1398: JUMPDEST\n1399: POP\n1400: PUSH2 0x05b5\n1403: PUSH1 0x04\n1405: DUP1\n1406: CALLDATASIZE\n1407: SUB\n1408: DUP2\n1409: ADD\n1410: SWAP1\n1411: DUP1\n1412: DUP1\n1413: CALLDATALOAD\n1414: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1435: AND\n1436: SWAP1\n1437: PUSH1 0x20\n1439: ADD\n1440: SWAP1\n1441: SWAP3\n1442: SWAP2\n1443: SWAP1\n1444: DUP1\n1445: CALLDATALOAD\n1446: SWAP1\n1447: PUSH1 0x20\n1449: ADD\n1450: SWAP1\n1451: SWAP3\n1452: SWAP2\n1453: SWAP1\n1454: POP\n1455: POP\n1456: POP\n1457: PUSH2 0x07cd\n1460: JUMP\n"
            },
            {
                "offset": 1461,
                "length": 2,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "5b00",
                "parsedOpcodes": "1461: JUMPDEST\n1462: STOP\n"
            },
            {
                "offset": 1463,
                "length": 8,
                "type": "dispatcher",
                "stackBalance": 1,
                "bytecodeHex": "5b3480156105c357",
                "parsedOpcodes": "1463: JUMPDEST\n1464: CALLVALUE\n1465: DUP1\n1466: ISZERO\n1467: PUSH2 0x05c3\n1470: JUMPI\n"
            },
            {
                "offset": 1471,
                "length": 4,
                "type": "dispatcher",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "1471: PUSH1 0x00\n1473: DUP1\n1474: REVERT\n"
            },
            {
                "offset": 1475,
                "length": 85,
                "type": "dispatcher",
                "stackBalance": 2,
                "bytecodeHex": "5b50610618600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107dc56",
                "parsedOpcodes": "1475: JUMPDEST\n1476: POP\n1477: PUSH2 0x0618\n1480: PUSH1 0x04\n1482: DUP1\n1483: CALLDATASIZE\n1484: SUB\n1485: DUP2\n1486: ADD\n1487: SWAP1\n1488: DUP1\n1489: DUP1\n1490: CALLDATALOAD\n1491: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1512: AND\n1513: SWAP1\n1514: PUSH1 0x20\n1516: ADD\n1517: SWAP1\n1518: SWAP3\n1519: SWAP2\n1520: SWAP1\n1521: DUP1\n1522: CALLDATALOAD\n1523: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1544: AND\n1545: SWAP1\n1546: PUSH1 0x20\n1548: ADD\n1549: SWAP1\n1550: SWAP3\n1551: SWAP2\n1552: SWAP1\n1553: POP\n1554: POP\n1555: POP\n1556: PUSH2 0x07dc\n1559: JUMP\n"
            },
            {
                "offset": 1560,
                "length": 22,
                "type": "dispatcher",
                "stackBalance": -1,
                "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
                "parsedOpcodes": "1560: JUMPDEST\n1561: PUSH1 0x40\n1563: MLOAD\n1564: DUP1\n1565: DUP3\n1566: DUP2\n1567: MSTORE\n1568: PUSH1 0x20\n1570: ADD\n1571: SWAP2\n1572: POP\n1573: POP\n1574: PUSH1 0x40\n1576: MLOAD\n1577: DUP1\n1578: SWAP2\n1579: SUB\n1580: SWAP1\n1581: RETURN\n"
            },
            {
                "offset": 1582,
                "length": 38,
                "type": "common",
                "stackBalance": 1,
                "bytecodeHex": "5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156",
                "parsedOpcodes": "1582: JUMPDEST\n1583: PUSH1 0x06\n1585: PUSH1 0x00\n1587: SWAP1\n1588: SLOAD\n1589: SWAP1\n1590: PUSH2 0x0100\n1593: EXP\n1594: SWAP1\n1595: DIV\n1596: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1617: AND\n1618: DUP2\n1619: JUMP\n"
            },
            {
                "offset": 1620,
                "length": 80,
                "type": "common",
                "stackBalance": 6,
                "bytecodeHex": "5b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106ea57",
                "parsedOpcodes": "1620: JUMPDEST\n1621: PUSH1 0x00\n1623: DUP1\n1624: SLOAD\n1625: PUSH1 0x01\n1627: DUP2\n1628: PUSH1 0x01\n1630: AND\n1631: ISZERO\n1632: PUSH2 0x0100\n1635: MUL\n1636: SUB\n1637: AND\n1638: PUSH1 0x02\n1640: SWAP1\n1641: DIV\n1642: DUP1\n1643: PUSH1 0x1f\n1645: ADD\n1646: PUSH1 0x20\n1648: DUP1\n1649: SWAP2\n1650: DIV\n1651: MUL\n1652: PUSH1 0x20\n1654: ADD\n1655: PUSH1 0x40\n1657: MLOAD\n1658: SWAP1\n1659: DUP2\n1660: ADD\n1661: PUSH1 0x40\n1663: MSTORE\n1664: DUP1\n1665: SWAP3\n1666: SWAP2\n1667: SWAP1\n1668: DUP2\n1669: DUP2\n1670: MSTORE\n1671: PUSH1 0x20\n1673: ADD\n1674: DUP3\n1675: DUP1\n1676: SLOAD\n1677: PUSH1 0x01\n1679: DUP2\n1680: PUSH1 0x01\n1682: AND\n1683: ISZERO\n1684: PUSH2 0x0100\n1687: MUL\n1688: SUB\n1689: AND\n1690: PUSH1 0x02\n1692: SWAP1\n1693: DIV\n1694: DUP1\n1695: ISZERO\n1696: PUSH2 0x06ea\n1699: JUMPI\n"
            },
            {
                "offset": 1700,
                "length": 8,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "80601f106106bf57",
                "parsedOpcodes": "1700: DUP1\n1701: PUSH1 0x1f\n1703: LT\n1704: PUSH2 0x06bf\n1707: JUMPI\n"
            },
            {
                "offset": 1708,
                "length": 19,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "6101008083540402835291602001916106ea56",
                "parsedOpcodes": "1708: PUSH2 0x0100\n1711: DUP1\n1712: DUP4\n1713: SLOAD\n1714: DIV\n1715: MUL\n1716: DUP4\n1717: MSTORE\n1718: SWAP2\n1719: PUSH1 0x20\n1721: ADD\n1722: SWAP2\n1723: PUSH2 0x06ea\n1726: JUMP\n"
            },
            {
                "offset": 1727,
                "length": 14,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b82019190600052602060002090",
                "parsedOpcodes": "1727: JUMPDEST\n1728: DUP3\n1729: ADD\n1730: SWAP2\n1731: SWAP1\n1732: PUSH1 0x00\n1734: MSTORE\n1735: PUSH1 0x20\n1737: PUSH1 0x00\n1739: SHA3\n1740: SWAP1\n"
            },
            {
                "offset": 1741,
                "length": 20,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b8154815290600101906020018083116106cd57",
                "parsedOpcodes": "1741: JUMPDEST\n1742: DUP2\n1743: SLOAD\n1744: DUP2\n1745: MSTORE\n1746: SWAP1\n1747: PUSH1 0x01\n1749: ADD\n1750: SWAP1\n1751: PUSH1 0x20\n1753: ADD\n1754: DUP1\n1755: DUP4\n1756: GT\n1757: PUSH2 0x06cd\n1760: JUMPI\n"
            },
            {
                "offset": 1761,
                "length": 9,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "829003601f16820191",
                "parsedOpcodes": "1761: DUP3\n1762: SWAP1\n1763: SUB\n1764: PUSH1 0x1f\n1766: AND\n1767: DUP3\n1768: ADD\n1769: SWAP2\n"
            },
            {
                "offset": 1770,
                "length": 8,
                "type": "common",
                "stackBalance": -5,
                "bytecodeHex": "5b50505050508156",
                "parsedOpcodes": "1770: JUMPDEST\n1771: POP\n1772: POP\n1773: POP\n1774: POP\n1775: POP\n1776: DUP2\n1777: JUMP\n"
            },
            {
                "offset": 1778,
                "length": 6,
                "type": "common",
                "stackBalance": 1,
                "bytecodeHex": "5b6003548156",
                "parsedOpcodes": "1778: JUMPDEST\n1779: PUSH1 0x03\n1781: SLOAD\n1782: DUP2\n1783: JUMP\n"
            },
            {
                "offset": 1784,
                "length": 19,
                "type": "common",
                "stackBalance": 1,
                "bytecodeHex": "5b600260009054906101000a900460ff168156",
                "parsedOpcodes": "1784: JUMPDEST\n1785: PUSH1 0x02\n1787: PUSH1 0x00\n1789: SWAP1\n1790: SLOAD\n1791: SWAP1\n1792: PUSH2 0x0100\n1795: EXP\n1796: SWAP1\n1797: DIV\n1798: PUSH1 0xff\n1800: AND\n1801: DUP2\n1802: JUMP\n"
            },
            {
                "offset": 1803,
                "length": 24,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b6007602052806000526040600020600091509050548156",
                "parsedOpcodes": "1803: JUMPDEST\n1804: PUSH1 0x07\n1806: PUSH1 0x20\n1808: MSTORE\n1809: DUP1\n1810: PUSH1 0x00\n1812: MSTORE\n1813: PUSH1 0x40\n1815: PUSH1 0x00\n1817: SHA3\n1818: PUSH1 0x00\n1820: SWAP2\n1821: POP\n1822: SWAP1\n1823: POP\n1824: SLOAD\n1825: DUP2\n1826: JUMP\n"
            },
            {
                "offset": 1827,
                "length": 6,
                "type": "common",
                "stackBalance": 1,
                "bytecodeHex": "5b6005548156",
                "parsedOpcodes": "1827: JUMPDEST\n1828: PUSH1 0x05\n1830: SLOAD\n1831: DUP2\n1832: JUMP\n"
            },
            {
                "offset": 1833,
                "length": 80,
                "type": "common",
                "stackBalance": 6,
                "bytecodeHex": "5b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107bf57",
                "parsedOpcodes": "1833: JUMPDEST\n1834: PUSH1 0x01\n1836: DUP1\n1837: SLOAD\n1838: PUSH1 0x01\n1840: DUP2\n1841: PUSH1 0x01\n1843: AND\n1844: ISZERO\n1845: PUSH2 0x0100\n1848: MUL\n1849: SUB\n1850: AND\n1851: PUSH1 0x02\n1853: SWAP1\n1854: DIV\n1855: DUP1\n1856: PUSH1 0x1f\n1858: ADD\n1859: PUSH1 0x20\n1861: DUP1\n1862: SWAP2\n1863: DIV\n1864: MUL\n1865: PUSH1 0x20\n1867: ADD\n1868: PUSH1 0x40\n1870: MLOAD\n1871: SWAP1\n1872: DUP2\n1873: ADD\n1874: PUSH1 0x40\n1876: MSTORE\n1877: DUP1\n1878: SWAP3\n1879: SWAP2\n1880: SWAP1\n1881: DUP2\n1882: DUP2\n1883: MSTORE\n1884: PUSH1 0x20\n1886: ADD\n1887: DUP3\n1888: DUP1\n1889: SLOAD\n1890: PUSH1 0x01\n1892: DUP2\n1893: PUSH1 0x01\n1895: AND\n1896: ISZERO\n1897: PUSH2 0x0100\n1900: MUL\n1901: SUB\n1902: AND\n1903: PUSH1 0x02\n1905: SWAP1\n1906: DIV\n1907: DUP1\n1908: ISZERO\n1909: PUSH2 0x07bf\n1912: JUMPI\n"
            },
            {
                "offset": 1913,
                "length": 8,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "80601f1061079457",
                "parsedOpcodes": "1913: DUP1\n1914: PUSH1 0x1f\n1916: LT\n1917: PUSH2 0x0794\n1920: JUMPI\n"
            },
            {
                "offset": 1921,
                "length": 19,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "6101008083540402835291602001916107bf56",
                "parsedOpcodes": "1921: PUSH2 0x0100\n1924: DUP1\n1925: DUP4\n1926: SLOAD\n1927: DIV\n1928: MUL\n1929: DUP4\n1930: MSTORE\n1931: SWAP2\n1932: PUSH1 0x20\n1934: ADD\n1935: SWAP2\n1936: PUSH2 0x07bf\n1939: JUMP\n"
            },
            {
                "offset": 1940,
                "length": 14,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b82019190600052602060002090",
                "parsedOpcodes": "1940: JUMPDEST\n1941: DUP3\n1942: ADD\n1943: SWAP2\n1944: SWAP1\n1945: PUSH1 0x00\n1947: MSTORE\n1948: PUSH1 0x20\n1950: PUSH1 0x00\n1952: SHA3\n1953: SWAP1\n"
            },
            {
                "offset": 1954,
                "length": 20,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b8154815290600101906020018083116107a257",
                "parsedOpcodes": "1954: JUMPDEST\n1955: DUP2\n1956: SLOAD\n1957: DUP2\n1958: MSTORE\n1959: SWAP1\n1960: PUSH1 0x01\n1962: ADD\n1963: SWAP1\n1964: PUSH1 0x20\n1966: ADD\n1967: DUP1\n1968: DUP4\n1969: GT\n1970: PUSH2 0x07a2\n1973: JUMPI\n"
            },
            {
                "offset": 1974,
                "length": 9,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "829003601f16820191",
                "parsedOpcodes": "1974: DUP3\n1975: SWAP1\n1976: SUB\n1977: PUSH1 0x1f\n1979: AND\n1980: DUP3\n1981: ADD\n1982: SWAP2\n"
            },
            {
                "offset": 1983,
                "length": 8,
                "type": "common",
                "stackBalance": -5,
                "bytecodeHex": "5b50505050508156",
                "parsedOpcodes": "1983: JUMPDEST\n1984: POP\n1985: POP\n1986: POP\n1987: POP\n1988: POP\n1989: DUP2\n1990: JUMP\n"
            },
            {
                "offset": 1991,
                "length": 6,
                "type": "common",
                "stackBalance": 1,
                "bytecodeHex": "5b6004548156",
                "parsedOpcodes": "1991: JUMPDEST\n1992: PUSH1 0x04\n1994: SLOAD\n1995: DUP2\n1996: JUMP\n"
            },
            {
                "offset": 1997,
                "length": 11,
                "type": "common",
                "stackBalance": 4,
                "bytecodeHex": "5b6107d833838361080156",
                "parsedOpcodes": "1997: JUMPDEST\n1998: PUSH2 0x07d8\n2001: CALLER\n2002: DUP4\n2003: DUP4\n2004: PUSH2 0x0801\n2007: JUMP\n"
            },
            {
                "offset": 2008,
                "length": 4,
                "type": "common",
                "stackBalance": -3,
                "bytecodeHex": "5b505056",
                "parsedOpcodes": "2008: JUMPDEST\n2009: POP\n2010: POP\n2011: JUMP\n"
            },
            {
                "offset": 2012,
                "length": 37,
                "type": "common",
                "stackBalance": -1,
                "bytecodeHex": "5b600860205281600052604060002060205280600052604060002060009150915050548156",
                "parsedOpcodes": "2012: JUMPDEST\n2013: PUSH1 0x08\n2015: PUSH1 0x20\n2017: MSTORE\n2018: DUP2\n2019: PUSH1 0x00\n2021: MSTORE\n2022: PUSH1 0x40\n2024: PUSH1 0x00\n2026: SHA3\n2027: PUSH1 0x20\n2029: MSTORE\n2030: DUP1\n2031: PUSH1 0x00\n2033: MSTORE\n2034: PUSH1 0x40\n2036: PUSH1 0x00\n2038: SHA3\n2039: PUSH1 0x00\n2041: SWAP2\n2042: POP\n2043: SWAP2\n2044: POP\n2045: POP\n2046: SLOAD\n2047: DUP2\n2048: JUMP\n"
            },
            {
                "offset": 2049,
                "length": 34,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b60008273ffffffffffffffffffffffffffffffffffffffff161415151561082757",
                "parsedOpcodes": "2049: JUMPDEST\n2050: PUSH1 0x00\n2052: DUP3\n2053: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2074: AND\n2075: EQ\n2076: ISZERO\n2077: ISZERO\n2078: ISZERO\n2079: PUSH2 0x0827\n2082: JUMPI\n"
            },
            {
                "offset": 2083,
                "length": 4,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "2083: PUSH1 0x00\n2085: DUP1\n2086: REVERT\n"
            },
            {
                "offset": 2087,
                "length": 74,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561087557",
                "parsedOpcodes": "2087: JUMPDEST\n2088: DUP1\n2089: PUSH1 0x07\n2091: PUSH1 0x00\n2093: DUP6\n2094: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2115: AND\n2116: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2137: AND\n2138: DUP2\n2139: MSTORE\n2140: PUSH1 0x20\n2142: ADD\n2143: SWAP1\n2144: DUP2\n2145: MSTORE\n2146: PUSH1 0x20\n2148: ADD\n2149: PUSH1 0x00\n2151: SHA3\n2152: SLOAD\n2153: LT\n2154: ISZERO\n2155: ISZERO\n2156: ISZERO\n2157: PUSH2 0x0875\n2160: JUMPI\n"
            },
            {
                "offset": 2161,
                "length": 4,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "2161: PUSH1 0x00\n2163: DUP1\n2164: REVERT\n"
            },
            {
                "offset": 2165,
                "length": 139,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561090457",
                "parsedOpcodes": "2165: JUMPDEST\n2166: PUSH1 0x07\n2168: PUSH1 0x00\n2170: DUP4\n2171: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2192: AND\n2193: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2214: AND\n2215: DUP2\n2216: MSTORE\n2217: PUSH1 0x20\n2219: ADD\n2220: SWAP1\n2221: DUP2\n2222: MSTORE\n2223: PUSH1 0x20\n2225: ADD\n2226: PUSH1 0x00\n2228: SHA3\n2229: SLOAD\n2230: DUP2\n2231: PUSH1 0x07\n2233: PUSH1 0x00\n2235: DUP6\n2236: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2257: AND\n2258: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2279: AND\n2280: DUP2\n2281: MSTORE\n2282: PUSH1 0x20\n2284: ADD\n2285: SWAP1\n2286: DUP2\n2287: MSTORE\n2288: PUSH1 0x20\n2290: ADD\n2291: PUSH1 0x00\n2293: SHA3\n2294: SLOAD\n2295: ADD\n2296: LT\n2297: ISZERO\n2298: ISZERO\n2299: ISZERO\n2300: PUSH2 0x0904\n2303: JUMPI\n"
            },
            {
                "offset": 2304,
                "length": 4,
                "type": "common",
                "stackBalance": 0,
                "bytecodeHex": "600080fd",
                "parsedOpcodes": "2304: PUSH1 0x00\n2306: DUP1\n2307: REVERT\n"
            },
            {
                "offset": 2308,
                "length": 260,
                "type": "common",
                "stackBalance": -4,
                "bytecodeHex": "5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056",
                "parsedOpcodes": "2308: JUMPDEST\n2309: DUP1\n2310: PUSH1 0x07\n2312: PUSH1 0x00\n2314: DUP6\n2315: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2336: AND\n2337: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2358: AND\n2359: DUP2\n2360: MSTORE\n2361: PUSH1 0x20\n2363: ADD\n2364: SWAP1\n2365: DUP2\n2366: MSTORE\n2367: PUSH1 0x20\n2369: ADD\n2370: PUSH1 0x00\n2372: SHA3\n2373: PUSH1 0x00\n2375: DUP3\n2376: DUP3\n2377: SLOAD\n2378: SUB\n2379: SWAP3\n2380: POP\n2381: POP\n2382: DUP2\n2383: SWAP1\n2384: SSTORE\n2385: POP\n2386: DUP1\n2387: PUSH1 0x07\n2389: PUSH1 0x00\n2391: DUP5\n2392: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2413: AND\n2414: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2435: AND\n2436: DUP2\n2437: MSTORE\n2438: PUSH1 0x20\n2440: ADD\n2441: SWAP1\n2442: DUP2\n2443: MSTORE\n2444: PUSH1 0x20\n2446: ADD\n2447: PUSH1 0x00\n2449: SHA3\n2450: PUSH1 0x00\n2452: DUP3\n2453: DUP3\n2454: SLOAD\n2455: ADD\n2456: SWAP3\n2457: POP\n2458: POP\n2459: DUP2\n2460: SWAP1\n2461: SSTORE\n2462: POP\n2463: DUP2\n2464: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2485: AND\n2486: DUP4\n2487: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2508: AND\n2509: PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n2542: DUP4\n2543: PUSH1 0x40\n2545: MLOAD\n2546: DUP1\n2547: DUP3\n2548: DUP2\n2549: MSTORE\n2550: PUSH1 0x20\n2552: ADD\n2553: SWAP2\n2554: POP\n2555: POP\n2556: PUSH1 0x40\n2558: MLOAD\n2559: DUP1\n2560: SWAP2\n2561: SUB\n2562: SWAP1\n2563: LOG3\n2564: POP\n2565: POP\n2566: POP\n2567: JUMP\n"
            },
            {
                "offset": 2568,
                "length": 0,
                "type": "exit",
                "stackBalance": 0,
                "bytecodeHex": "",
                "parsedOpcodes": "2568: EXIT BLOCK"
            }
        ],
        "successors": [
            {
                "from": 0,
                "to": [
                    13,
                    164
                ]
            },
            {
                "from": 13,
                "to": [
                    65,
                    746
                ]
            },
            {
                "from": 65,
                "to": [
                    76,
                    833
                ]
            },
            {
                "from": 76,
                "to": [
                    87,
                    977
                ]
            },
            {
                "from": 87,
                "to": [
                    98,
                    1020
                ]
            },
            {
                "from": 98,
                "to": [
                    109,
                    1069
                ]
            },
            {
                "from": 109,
                "to": [
                    120,
                    1156
                ]
            },
            {
                "from": 120,
                "to": [
                    131,
                    1199
                ]
            },
            {
                "from": 131,
                "to": [
                    142,
                    1343
                ]
            },
            {
                "from": 142,
                "to": [
                    153,
                    1386
                ]
            },
            {
                "from": 153,
                "to": [
                    164,
                    1463
                ]
            },
            {
                "from": 164,
                "to": [
                    287,
                    291
                ]
            },
            {
                "from": 287,
                "to": [
                    2568
                ]
            },
            {
                "from": 291,
                "to": [
                    310,
                    314
                ]
            },
            {
                "from": 310,
                "to": [
                    2568
                ]
            },
            {
                "from": 314,
                "to": [
                    732,
                    741
                ]
            },
            {
                "from": 732,
                "to": [
                    2568
                ]
            },
            {
                "from": 741,
                "to": [
                    2568
                ]
            },
            {
                "from": 746,
                "to": [
                    754,
                    758
                ]
            },
            {
                "from": 754,
                "to": [
                    2568
                ]
            },
            {
                "from": 758,
                "to": [
                    1582,
                    1582
                ]
            },
            {
                "from": 767,
                "to": [
                    2568
                ]
            },
            {
                "from": 833,
                "to": [
                    841,
                    845
                ]
            },
            {
                "from": 841,
                "to": [
                    2568
                ]
            },
            {
                "from": 845,
                "to": [
                    1620,
                    1620
                ]
            },
            {
                "from": 854,
                "to": [
                    891
                ]
            },
            {
                "from": 891,
                "to": [
                    900,
                    918
                ]
            },
            {
                "from": 900,
                "to": [
                    891,
                    891,
                    891
                ]
            },
            {
                "from": 918,
                "to": [
                    938,
                    963
                ]
            },
            {
                "from": 938,
                "to": [
                    963
                ]
            },
            {
                "from": 963,
                "to": [
                    2568
                ]
            },
            {
                "from": 977,
                "to": [
                    985,
                    989
                ]
            },
            {
                "from": 985,
                "to": [
                    2568
                ]
            },
            {
                "from": 989,
                "to": [
                    1778,
                    1778
                ]
            },
            {
                "from": 998,
                "to": [
                    2568
                ]
            },
            {
                "from": 1020,
                "to": [
                    1028,
                    1032
                ]
            },
            {
                "from": 1028,
                "to": [
                    2568
                ]
            },
            {
                "from": 1032,
                "to": [
                    1784,
                    1784
                ]
            },
            {
                "from": 1041,
                "to": [
                    2568
                ]
            },
            {
                "from": 1069,
                "to": [
                    1077,
                    1081
                ]
            },
            {
                "from": 1077,
                "to": [
                    2568
                ]
            },
            {
                "from": 1081,
                "to": [
                    1803,
                    1803
                ]
            },
            {
                "from": 1134,
                "to": [
                    2568
                ]
            },
            {
                "from": 1156,
                "to": [
                    1164,
                    1168
                ]
            },
            {
                "from": 1164,
                "to": [
                    2568
                ]
            },
            {
                "from": 1168,
                "to": [
                    1827,
                    1827
                ]
            },
            {
                "from": 1177,
                "to": [
                    2568
                ]
            },
            {
                "from": 1199,
                "to": [
                    1207,
                    1211
                ]
            },
            {
                "from": 1207,
                "to": [
                    2568
                ]
            },
            {
                "from": 1211,
                "to": [
                    1833,
                    1833
                ]
            },
            {
                "from": 1220,
                "to": [
                    1257
                ]
            },
            {
                "from": 1257,
                "to": [
                    1266,
                    1284
                ]
            },
            {
                "from": 1266,
                "to": [
                    1257,
                    1257,
                    1257
                ]
            },
            {
                "from": 1284,
                "to": [
                    1304,
                    1329
                ]
            },
            {
                "from": 1304,
                "to": [
                    1329
                ]
            },
            {
                "from": 1329,
                "to": [
                    2568
                ]
            },
            {
                "from": 1343,
                "to": [
                    1351,
                    1355
                ]
            },
            {
                "from": 1351,
                "to": [
                    2568
                ]
            },
            {
                "from": 1355,
                "to": [
                    1991,
                    1991
                ]
            },
            {
                "from": 1364,
                "to": [
                    2568
                ]
            },
            {
                "from": 1386,
                "to": [
                    1394,
                    1398
                ]
            },
            {
                "from": 1394,
                "to": [
                    2568
                ]
            },
            {
                "from": 1398,
                "to": [
                    1997,
                    1997
                ]
            },
            {
                "from": 1461,
                "to": [
                    2568
                ]
            },
            {
                "from": 1463,
                "to": [
                    1471,
                    1475
                ]
            },
            {
                "from": 1471,
                "to": [
                    2568
                ]
            },
            {
                "from": 1475,
                "to": [
                    2012,
                    2012
                ]
            },
            {
                "from": 1560,
                "to": [
                    2568
                ]
            },
            {
                "from": 1582,
                "to": [
                    767
                ]
            },
            {
                "from": 1620,
                "to": [
                    1700,
                    1770
                ]
            },
            {
                "from": 1700,
                "to": [
                    1708,
                    1727
                ]
            },
            {
                "from": 1708,
                "to": [
                    1770,
                    1770
                ]
            },
            {
                "from": 1727,
                "to": [
                    1741
                ]
            },
            {
                "from": 1741,
                "to": [
                    1761,
                    1741
                ]
            },
            {
                "from": 1761,
                "to": [
                    1770
                ]
            },
            {
                "from": 1770,
                "to": [
                    854,
                    854,
                    854
                ]
            },
            {
                "from": 1778,
                "to": [
                    998
                ]
            },
            {
                "from": 1784,
                "to": [
                    1041
                ]
            },
            {
                "from": 1803,
                "to": [
                    1134
                ]
            },
            {
                "from": 1827,
                "to": [
                    1177
                ]
            },
            {
                "from": 1833,
                "to": [
                    1913,
                    1983
                ]
            },
            {
                "from": 1913,
                "to": [
                    1921,
                    1940
                ]
            },
            {
                "from": 1921,
                "to": [
                    1983,
                    1983
                ]
            },
            {
                "from": 1940,
                "to": [
                    1954
                ]
            },
            {
                "from": 1954,
                "to": [
                    1974,
                    1954
                ]
            },
            {
                "from": 1974,
                "to": [
                    1983
                ]
            },
            {
                "from": 1983,
                "to": [
                    1220,
                    1220,
                    1220
                ]
            },
            {
                "from": 1991,
                "to": [
                    1364
                ]
            },
            {
                "from": 1997,
                "to": [
                    2049,
                    2049
                ]
            },
            {
                "from": 2008,
                "to": [
                    1461
                ]
            },
            {
                "from": 2012,
                "to": [
                    1560
                ]
            },
            {
                "from": 2049,
                "to": [
                    2083,
                    2087
                ]
            },
            {
                "from": 2083,
                "to": [
                    2568
                ]
            },
            {
                "from": 2087,
                "to": [
                    2161,
                    2165
                ]
            },
            {
                "from": 2161,
                "to": [
                    2568
                ]
            },
            {
                "from": 2165,
                "to": [
                    2304,
                    2308
                ]
            },
            {
                "from": 2304,
                "to": [
                    2568
                ]
            },
            {
                "from": 2308,
                "to": [
                    2008
                ]
            },
            {
                "from": 2568,
                "to": []
            }
        ],
        "buildReport": {
            "directJumpTargetErrors": 0,
            "orphanJumpTargetNullErrors": 0,
            "orphanJumpTargetUnknownErrors": 0,
            "loopDepthExceededErrors": 0,
            "multipleRootNodesErrors": 0,
            "stackExceededErrorss": 0,
            "blockLimitErrors": 0,
            "criticalErrors": 0,
            "errorLog": "",
            "buildTimeMillis": 0
        }
    }
}
