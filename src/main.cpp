#include<iostream>
#include "CFG/contract/Contract.h"
#include<regex>
using namespace std;

int main(){
    string bytecode = "608060405260aa60005534801561001557600080fd5b50610184806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b3df200146100515780635bfd987d1461006f578063c2985578146100b1578063febb0f7e146100cf575b600080fd5b6100596100ed565b6040518082815260200191505060405180910390f35b61009b6004803603602081101561008557600080fd5b810190808035906020019092919050505061011d565b6040518082815260200191505060405180910390f35b6100b961012a565b6040518082815260200191505060405180910390f35b6100d761013c565b6040518082815260200191505060405180910390f35b6000806000815480929190600101919050555060aa600054141561011557600054905061011a565b600080fd5b90565b6000816088019050919050565b600061013761cccc61011d565b905090565b600061014961dddd61011d565b90509056fea2646970667358221220e619b234c1887f9b10b567ee21364dbf523a19001c8c47a33049907c0398563164736f6c63430006040033";
    string name = "Sample";
    Contract contract(name, bytecode);
    // Contract* contract = new Contract(name, bytecode);
    cout << "toString:\n" << contract.toString() << endl;
    cout << "getBytes:\n" << contract.getBytes() << endl;
    cout << "getBinarySource:\n" << contract.getBinarySource() << endl;
    cout << "getContractHash:\n" << contract.getContractHash() << endl;
    cout << "getMetadata:\n" << contract.getMetadata() << endl;
    cout << "getConstructorReaminingData:\n" << contract.getConstructorRemainingData() << endl;
    cout << "getExactSolidityVersion:\n" << contract.getExactSolidityVersion() << endl;
    return 0;
}